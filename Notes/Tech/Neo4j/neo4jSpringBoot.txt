
https://docs.spring.io/spring-data/neo4j/docs/5.1.0.RELEASE/reference/html/

    compile 'org.springframework.data:spring-data-neo4j:{version}'

    // add this dependency if you want to use the embedded driver
    compile 'org.neo4j:neo4j-ogm-embedded-driver:{ogm-version}'

    // add this dependency if you want to use the Http driver
    compile 'org.neo4j:neo4j-ogm-http-driver:{ogm-version}'
    


9.3.4. Cypher Queries
The Session also allows execution of arbitrary Cypher queries via its query, queryForObject and queryForObjects methods.
Cypher queries that return tabular results should be passed into the query method. An org.neo4j.ogm.session.result.Result is returned.
This consists of org.neo4j.ogm.session.result.QueryStatistics representing statistics of modifying cypher statements if applicable, and
an Iterable<Map<String,Object>> containing the raw data, of which nodes and relationships are mapped to domain entities if possible.
The keys in each Map correspond to the names listed in the return clause of the executed Cypher query.



Named queries
Sometimes it makes sense to extract e.g. a long query. Spring Data Neo4j will look in the META-INF/neo4j-named-queries.properties file to find named queries. If you provide a query property like User.findByQuery=MATCH (e) WHERE e.name={name} RETURN e you can refer to this method by providing a finder method in your repository. The repository has to support the given entity type (in this example User) and the method has to be named as the defined one (findByQuery). As you can see in the example it is possible to parameterize the query.

