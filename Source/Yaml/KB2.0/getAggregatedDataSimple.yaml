openapi: "3.0.0"
info:
  version: 1.0.0
  title: This is the REST service maintained by the Broad Institute's Type 2 Diabetes Research group
  description: This is the REST service maintained by the Broad Institute's Type 2 Diabetes Research group
  termsOfService: http://swagger.io/terms/
  contact:
    name: Dcc Team
    email: help@type2diabetesgenetics.org
    url: http://type2diabetesgenetics.org
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://type2diabetesgenetics.org:8090/dccservices
paths:
  /getAggregatedDataSimple:
    get:
      summary: retrieve variants based on chromosome region and phanotype
      description: retrieve variants based on chromosome region and phanotype
      operationId: findVariants
      parameters:
        - name: start
          in: query
          description: start of the chrom region
          required: true
          schema:
            type: integer
            format: int32
        - name: end
          in: query
          description: end of the chrom region
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /pets/{id}:
    get:
      summary: test
      description: test
      operationId: find pet by id
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Pet:
      allOf:
        - $ref: '#/components/schemas/NewPet'
        - required:
          - id
          properties:
            id:
              type: integer
              format: int64

    NewPet:
      required:
        - name  
      properties:
        name:
          type: string
        tag:
          type: string    

    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
